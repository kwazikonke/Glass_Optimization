// <auto-generated />
using GlassOpt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlassOpt.Migrations
{
    [DbContext(typeof(GlassOptContext))]
    [Migration("20240621095852_Updating")]
    partial class Updating
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GlassOpt.Models.Panel", b =>
                {
                    b.Property<int>("Panel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Panel_Id"));

                    b.Property<int>("AllocatedStockSheetStockSheet_Id")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Panel_Id");

                    b.HasIndex("AllocatedStockSheetStockSheet_Id");

                    b.ToTable("Panel");
                });

            modelBuilder.Entity("GlassOpt.Models.StockSheet", b =>
                {
                    b.Property<int>("StockSheet_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockSheet_Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("StockSheet_Id");

                    b.ToTable("StockSheet");
                });

            modelBuilder.Entity("GlassOpt.Models.Panel", b =>
                {
                    b.HasOne("GlassOpt.Models.StockSheet", "AllocatedStockSheet")
                        .WithMany("AllocatedPanels")
                        .HasForeignKey("AllocatedStockSheetStockSheet_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AllocatedStockSheet");
                });

            modelBuilder.Entity("GlassOpt.Models.StockSheet", b =>
                {
                    b.Navigation("AllocatedPanels");
                });
#pragma warning restore 612, 618
        }
    }
}
